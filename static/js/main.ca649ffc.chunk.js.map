{"version":3,"sources":["common/assets/img/square_320_431787d41442021a815067689754243d.jpg","chat/ChatPage.js","App.js","index.js","swDev.js","chat/Chat.module.scss"],"names":["ChatPage","useState","wsChannel","setWsChannel","readyStatus","setReadyStatus","messages","setMessages","closeHandler","console","log","openHandler","errorHandler","e","receiveMessage","newMessage","message","data","time","Date","toLocaleTimeString","hour","minute","local","prevMessages","useEffect","length","localStorage","setItem","JSON","stringify","chatRef","document","getElementById","scrollTop","scrollHeight","getItem","parse","ws","WebSocket","addEventListener","removeEventListener","className","s","chatWrap","header","Avatar","sx","width","height","position","left","top","src","photo","name","style","flex","Messages","AddMessageForm","sendMessage","send","id","map","m","index","Message","messageClass","messageWrap","localMessageWrap","avatar","messageInfo","nameWrap","setMessage","connection","navigator","onLine","iconClass","icon","activeIcon","formGroup","Alert","alert","severity","disabled","placeholder","textarea","value","onChange","currentTarget","onClick","localMessage","App","ReactDOM","render","swUrl","process","serviceWorker","register","then","res","swDev","module","exports"],"mappings":"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","file":"static/js/main.ca649ffc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/square_320_431787d41442021a815067689754243d.ef24912b.jpg\";","import React, {useEffect, useState} from 'react';\r\nimport s from './Chat.module.scss'\r\nimport Avatar from '@mui/material/Avatar';\r\nimport photo from '../common/assets/img/square_320_431787d41442021a815067689754243d.jpg'\r\nimport { FaTelegramPlane } from 'react-icons/fa';\r\nimport {Alert} from \"@mui/material\";\r\n\r\nfunction ChatPage() {\r\n\r\n    const [wsChannel, setWsChannel] = useState(null)\r\n    const [readyStatus, setReadyStatus] = useState('pending')\r\n    const [messages, setMessages] = useState([])\r\n\r\n    const closeHandler = () => {\r\n        console.log('close ws')\r\n        setReadyStatus('close')\r\n    }\r\n    const openHandler = () => {\r\n        console.log('open ws')\r\n        setReadyStatus('ready')\r\n    }\r\n    const errorHandler = (e) => {\r\n            console.log(\"Error: \", e)\r\n    }\r\n    const receiveMessage = (e) => {\r\n\r\n         let newMessage = {\r\n             message: e.data,\r\n             time: new Date().toLocaleTimeString('en-US', {hour: '2-digit', minute:'2-digit'}),\r\n             local:false\r\n         }\r\n\r\n        setMessages((prevMessages) => [...prevMessages, newMessage])\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        messages.length > 0 && localStorage.setItem('messages', JSON.stringify(messages));\r\n        const chatRef = document.getElementById('chat')\r\n        if (chatRef) chatRef.scrollTop = chatRef.scrollHeight;\r\n    },[messages])\r\n\r\n\r\n    const sendMessage = (message) => {\r\n        if(wsChannel) wsChannel.send(message)\r\n    }\r\n\r\n    useEffect(() => {\r\n        let messages = localStorage.getItem('messages')\r\n\r\n        if (messages) {\r\n            setMessages(JSON.parse(messages))\r\n        }\r\n        let ws = new WebSocket('wss://ws.qexsystems.ru')\r\n\r\n        ws.addEventListener(\"open\",openHandler)\r\n        ws.addEventListener(\"message\", receiveMessage)\r\n        ws.addEventListener('close', closeHandler)\r\n        ws.addEventListener(\"error\", errorHandler)\r\n\r\n        setWsChannel(ws)\r\n\r\n        return () => {\r\n            if(wsChannel) {\r\n                wsChannel.removeEventListener('close', closeHandler)\r\n                wsChannel.addEventListener(\"open\",openHandler)\r\n                wsChannel.addEventListener(\"message\", receiveMessage)\r\n                wsChannel.addEventListener(\"error\", errorHandler)\r\n            }\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n\r\n        <div className={s.chatWrap}>\r\n            <div className={s.header}>\r\n                <Avatar\r\n                    sx={{ width: 40, height: 40, position:'absolute', left: 22, top: 12 }}\r\n                    src={photo}/>\r\n                <span className={s.name} style={{flex: '1'}}> {'First name + Last name'}</span>\r\n\r\n            </div>\r\n            <Messages  messages={messages}/>\r\n            <AddMessageForm readyStatus={readyStatus} setMessages={setMessages} sendMessage={sendMessage}/>\r\n        </div>\r\n    )\r\n}\r\nexport default  ChatPage\r\n\r\nfunction Messages({messages}) {\r\n\r\n    return (\r\n        <div id ={'chat'} className={s.messages}>\r\n            {messages.map((m, index) =>\r\n                <Message local={m.local} time={m.time} message={m.message} key={index}/>)}\r\n        </div>\r\n     )\r\n }\r\n\r\n\r\n\r\n\r\nfunction Message({message,time,local}) {\r\n\r\n    let messageClass = local ? s.messageWrap + ' ' + s.localMessageWrap : s.messageWrap\r\n     return (\r\n         <div className={messageClass}>\r\n             {!local &&\r\n             <div className={s.avatar}>\r\n                 <Avatar sx={{ width: 54, height: 54 }} src={photo}/>\r\n             </div>}\r\n             <div className={s.messageInfo}>\r\n                 <div className={s.nameWrap} >\r\n                     {!local && <span className={s.name} style={{flex: '1'}}> {'First name + Last name'}</span>}\r\n                     <span className={s.message}> {message}</span>\r\n                 </div>\r\n                 <div  className={s.time} > {time}</div>\r\n             </div>\r\n\r\n         </div>\r\n     );\r\n }\r\n\r\nfunction AddMessageForm({setMessages, sendMessage,readyStatus }) {\r\n    const [message, setMessage] = useState('')\r\n\r\n    let connection = navigator.onLine\r\n    const localMessage = (message) => {\r\n\r\n        let newMessage = {\r\n            message: message,\r\n            time: new Date().toLocaleTimeString('en-US', {hour: '2-digit', minute:'2-digit'}),\r\n            local:true\r\n        }\r\n\r\n        setMessages((prevMessages) => [...prevMessages, newMessage])\r\n    }\r\n\r\n    const sendMessageHandler = () => {\r\n        if (!message) return;\r\n        sendMessage(message)\r\n        localMessage(message)\r\n         setMessage('')\r\n    }\r\n\r\n   const onChangeHandler = (e) => {\r\n        setMessage(e.currentTarget.value)\r\n    }\r\n\r\n    let iconClass = !!message ? s.icon + ' ' + s.activeIcon : s.icon\r\n\r\n    return <div className={s.formGroup}>\r\n        { !connection &&  <Alert className={s.alert} severity=\"warning\">App working in offline mod, check the internet connection</Alert>}\r\n        <textarea\r\n                  disabled={ readyStatus !== 'ready' || !connection}\r\n                  placeholder={'Enter text message...'}\r\n                  className={s.textarea}\r\n                  value={message}\r\n                  onChange={onChangeHandler}\r\n        />\r\n        <FaTelegramPlane\r\n            className={iconClass}\r\n            onClick={sendMessageHandler}\r\n        />\r\n    </div>;\r\n}\r\n\r\n\r\n\r\n","import './App.css';\nimport ChatPage from \"./chat/ChatPage\";\nimport React from \"react\";\n\nfunction App() {\n\n  return (\n    <div className=\"container\">\n        <ChatPage/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport swDev from \"./swDev\";\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\nswDev()\n\n// serviceWorkerRegistration.unregister();\n// reportWebVitals();\n","\r\n\r\n\r\nexport default function swDev(){\r\n\r\n    let swUrl = `${process.env.PUBLIC_URL}/sw.js`\r\n\r\n    navigator.serviceWorker.register(swUrl)\r\n        .then((res) => {\r\n            console.log(res)\r\n        })\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatWrap\":\"Chat_chatWrap__11kVs\",\"header\":\"Chat_header__MPBOD\",\"name\":\"Chat_name__2IkWV\",\"messages\":\"Chat_messages__2jibP\",\"messageWrap\":\"Chat_messageWrap__1PNqZ\",\"avatar\":\"Chat_avatar__2KZPp\",\"messageInfo\":\"Chat_messageInfo__x0gq_\",\"nameWrap\":\"Chat_nameWrap__21dOh\",\"message\":\"Chat_message__3F4BL\",\"time\":\"Chat_time__2n_jF\",\"localMessageWrap\":\"Chat_localMessageWrap__1Yygx\",\"formGroup\":\"Chat_formGroup__1Jci6\",\"alert\":\"Chat_alert__2QT2J\",\"textarea\":\"Chat_textarea__1PViJ\",\"icon\":\"Chat_icon__ERiI9\",\"activeIcon\":\"Chat_activeIcon__V6A3w\"};"],"sourceRoot":""}